{"ast":null,"code":"var _jsxFileName = \"/Users/mucahit/Desktop/react-chat/src/components/ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { query, collection, orderBy, onSnapshot, limit } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport Message from \"./Message\";\nimport SendMessage from \"./SendMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const scroll = useRef();\n  useEffect(() => {\n    const q = query(collection(db, \"messages\"), orderBy(\"createdAt\", \"desc\"), limit(50));\n    const unsubscribe = onSnapshot(q, QuerySnapshot => {\n      const fetchedMessages = [];\n      QuerySnapshot.forEach(doc => {\n        fetchedMessages.push({\n          ...doc.data(),\n          id: doc.id\n        });\n      });\n      const sortedMessages = fetchedMessages.sort((a, b) => a.createdAt - b.createdAt);\n      setMessages(sortedMessages);\n    });\n    return () => unsubscribe;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"chat-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-wrapper\",\n      children: messages === null || messages === void 0 ? void 0 : messages.map(message => /*#__PURE__*/_jsxDEV(Message, {\n        message: message\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      ref: scroll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SendMessage, {\n      scroll: scroll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"qLF6HWpbAEbJLqWaVt1/GGbZ5Lk=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useEffect","useRef","useState","query","collection","orderBy","onSnapshot","limit","db","Message","SendMessage","jsxDEV","_jsxDEV","ChatBox","_s","messages","setMessages","scroll","q","unsubscribe","QuerySnapshot","fetchedMessages","forEach","doc","push","data","id","sortedMessages","sort","a","b","createdAt","className","children","map","message","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/mucahit/Desktop/react-chat/src/components/ChatBox.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  query,\n  collection,\n  orderBy,\n  onSnapshot,\n  limit,\n} from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport Message from \"./Message\";\nimport SendMessage from \"./SendMessage\";\n\nconst ChatBox = () => {\n  const [messages, setMessages] = useState([]);\n  const scroll = useRef();\n\n  useEffect(() => {\n    const q = query(\n      collection(db, \"messages\"),\n      orderBy(\"createdAt\", \"desc\"),\n      limit(50)\n    );\n\n    const unsubscribe = onSnapshot(q, (QuerySnapshot) => {\n      const fetchedMessages = [];\n      QuerySnapshot.forEach((doc) => {\n        fetchedMessages.push({ ...doc.data(), id: doc.id });\n      });\n      const sortedMessages = fetchedMessages.sort(\n        (a, b) => a.createdAt - b.createdAt\n      );\n      setMessages(sortedMessages);\n    });\n    return () => unsubscribe;\n  }, []);\n\n  return (\n    <main className=\"chat-box\">\n      <div className=\"messages-wrapper\">\n        {messages?.map((message) => (\n          <Message key={message.id} message={message} />\n        ))}\n      </div>\n      {/* when a new message enters the chat, the screen scrolls down to the scroll div */}\n      <span ref={scroll}></span>\n      <SendMessage scroll={scroll} />\n    </main>\n  );\n};\n\nexport default ChatBox;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SACEC,KAAK,EACLC,UAAU,EACVC,OAAO,EACPC,UAAU,EACVC,KAAK,QACA,oBAAoB;AAC3B,SAASC,EAAE,QAAQ,aAAa;AAChC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMe,MAAM,GAAGhB,MAAM,CAAC,CAAC;EAEvBD,SAAS,CAAC,MAAM;IACd,MAAMkB,CAAC,GAAGf,KAAK,CACbC,UAAU,CAACI,EAAE,EAAE,UAAU,CAAC,EAC1BH,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC,EAC5BE,KAAK,CAAC,EAAE,CACV,CAAC;IAED,MAAMY,WAAW,GAAGb,UAAU,CAACY,CAAC,EAAGE,aAAa,IAAK;MACnD,MAAMC,eAAe,GAAG,EAAE;MAC1BD,aAAa,CAACE,OAAO,CAAEC,GAAG,IAAK;QAC7BF,eAAe,CAACG,IAAI,CAAC;UAAE,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC;UAAEC,EAAE,EAAEH,GAAG,CAACG;QAAG,CAAC,CAAC;MACrD,CAAC,CAAC;MACF,MAAMC,cAAc,GAAGN,eAAe,CAACO,IAAI,CACzC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,SAAS,GAAGD,CAAC,CAACC,SAC5B,CAAC;MACDf,WAAW,CAACW,cAAc,CAAC;IAC7B,CAAC,CAAC;IACF,OAAO,MAAMR,WAAW;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAMoB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACxBrB,OAAA;MAAKoB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC9BlB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEmB,GAAG,CAAEC,OAAO,iBACrBvB,OAAA,CAACH,OAAO;QAAkB0B,OAAO,EAAEA;MAAQ,GAA7BA,OAAO,CAACT,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN3B,OAAA;MAAM4B,GAAG,EAAEvB;IAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1B3B,OAAA,CAACF,WAAW;MAACO,MAAM,EAAEA;IAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEX,CAAC;AAACzB,EAAA,CApCID,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AAsCb,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}